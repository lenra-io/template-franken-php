services:
  app:
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    image: lenra/app/template-franken-php:init
    build:
      context: ..
      dockerfile: /home/taorepoara/lenra/templates/template-franken-php/.lenra/Dockerfile
    ports:
    - 8080:8080
    user: '12000'
  devtool:
    healthcheck:
      test:
      - CMD
      - wget
      - --spider
      - -q
      - http://localhost:4000/health
      interval: 1s
      retries: 5
      start_period: 10s
    image: lenra/devtools:latest
    ports:
    - 4000:4000
    - 4001:4001
    - 4444:4444
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: lenra_devtool
      POSTGRES_HOST: postgres
      OF_WATCHDOG_URL: http://app:8080
      LENRA_API_URL: http://devtool:4001
      MONGO_HOSTNAME: mongo
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
  postgres:
    healthcheck:
      test:
      - CMD
      - pg_isready
      - -U
      - postgres
      interval: 1s
      retries: 5
      start_period: 5s
    image: postgres:13
    ports:
    - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: lenra_devtool
  mongo:
    healthcheck:
      test: test $$(echo "rs.initiate($$CONFIG).ok || rs.status().ok" | mongo --quiet) -eq 1
      interval: 1s
      retries: 5
      start_period: 5s
    image: mongo:5
    ports:
    - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: test
      CONFIG: '{"_id" : "rs0", "members" : [{"_id" : 0,"host" : "mongo:27017"}]}'
    command: mongod --replSet rs0
